extends:
  - example_config_base.yaml
  - example_secrets.yaml

auth:
  get_groups_by_header: false
  get_user_by_header: false
  get_user_by_oauth: false
  get_user_by_saml: true
  groups_header_name: group_header
  user_header_name: user_header
  set_auth_cookie: true

get_user_by_saml_settings:
  # On the provider, set ACS url to https://your_consoleme_url/saml/acs and saml audience to "https://your_consoleme_url/"
  idp_metadata_url: https://portal.sso.us-east-1.amazonaws.com/saml/metadata/CUSTOMENDPOINT
  saml_path: example_config/saml_example
  jwt:
    expiration_hours: 1
    email_key: email
    groups_key: groups
  attributes:
    user: user
    groups: groups
    email: email
  saml_settings:
    debug: true
    # IDP settings are not necessary if you provided the get_user_by_saml_settings.idp_metadata_url configuration setting
    # They are provided here as an example
    #    idp:
    #      entityId: https://portal.sso.us-east-1.amazonaws.com/saml/assertion/CUSTOMENDPOINT
    #      singleLogoutService:
    #        binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect
    #        url: https://portal.sso.us-east-1.amazonaws.com/saml/logout/CUSTOMENDPOINT
    #      singleSignOnService:
    #        binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect
    #        url: https://portal.sso.us-east-1.amazonaws.com/saml/assertion/CUSTOMENDPOINT
    #      x509cert: MIIDAz.....
    sp:
      NameIDFormat: urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress
      assertionConsumerService:
        binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST
        url: http://localhost:8081/saml/acs
      entityId: http://localhost:8081
      singleLogoutService:
        binding: urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect
        url: https://localhost:8081/saml/sls
    strict: false
    support:
      emailAddress: support@example.com
      givenName: support_name
      technical:
        emailAddress: technical@example.com
        givenName: technical_name
    organization:
      en-US:
        displayname: ConsoleMe
        name: ConsoleMe
        url: http://localhost:8081
    security:
      authnRequestsSigned: true
      digestAlgorithm: http://www.w3.org/2000/09/xmldsig#sha1
      logoutRequestSigned: true
      logoutResponseSigned: true
      nameIdEncrypted: true
      signMetadata: true
      signatureAlgorithm: http://www.w3.org/2000/09/xmldsig#rsa-sha1
      wantAssertionsEncrypted: true
      wantAssertionsSigned: true
      wantMessagesSigned: true
      wantNameId: true
      wantNameIdEncrypted: false

development: true

url: http://localhost:8081

tornado:
  debug: true
  port: 8081
  xsrf: false

google:
  service_key_file: example_config/test_google_secret.json

duo:
  lambda_arn: arn:aws:lambda:{}:123456789012:function:duo_lambda

challenge:
  expiration: 600

celery_jobs:
  cloudtrail_errors:
    sleep_time: 0

logging:
  format: "%(asctime)s - %(levelname)s - %(name)s - [%(filename)s:%(lineno)s - %(funcName)s() ] - %(message)s"
  stdout_enabled: true
  level: debug
  elasticsearch:
    level: DEBUG
  file: ~/.consoleme/consoleme_tornado.log

aws:
  account_number: 123456789012
  region: us-east-1

ses:
  consoleme:
    sender: consoleme_test@fakedomain.com
    name: Consoleme
  accessui:
    sender: access_ui_test@fakedomain.com
    name: Access UI
