version: "3"
# Never use this in a production environment.
services:
  consoleme-deploy:
    image: "consoleme/consoleme"
    ports:
      # Serve ConsoleMe's backend (Python Tornado) port, which is used to serve the frontend when built
      - "8081:8081"
    environment:
      - SETUPTOOLS_USE_DISTUTILS=stdlib
      - CONFIG_LOCATION=${CONFIG_LOCATION:-/apps/consoleme/example_config/example_config_docker_development.yaml}
      - EC2_REGION=${EC2_REGION:-us-east-1}
    # Run commands to install Consoleme, run the service, and never exit in the event of failure (For dev debugging)
    command: >
      bash -c 'python consoleme/__main__.py'
  consoleme-celery-deploy:
    image: "consoleme/consoleme"
    environment:
      - SETUPTOOLS_USE_DISTUTILS=stdlib
      - CONFIG_LOCATION=${CONFIG_LOCATION:-/apps/consoleme/example_config/example_config_docker_development.yaml}
      - EC2_REGION=${EC2_REGION:-us-east-1}
      - COLUMNS=80 # Needed for Celery: https://github.com/celery/celery/issues/5761
    # Run Redis with ConsoleMe configuration
    command: >
      bash -c '
      python scripts/retrieve_or_decode_configuration.py;
      python scripts/initialize_dynamodb_oss.py;
      python scripts/initialize_redis_oss.py;
      celery -A consoleme.celery_tasks.celery_tasks worker -l DEBUG -B -E --concurrency=8'
