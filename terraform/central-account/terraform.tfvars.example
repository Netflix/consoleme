name                = "consoleme"
stage               = "somestage"
namespace           = "sfdc"
region              = "us-east-1"
default_tags        = {}
key_name            = "kinnaird"
vpc_cidr            = "10.1.1.0/24"
public_subnet_cidrs = ["10.1.1.128/28", "10.1.1.144/28"]
private_subnet_cidrs = ["10.1.1.0/28"]
subnet_azs          = ["us-east-1a", "us-east-1b"]
application_admin   = "teamemail@example.com"

allowed_inbound_cidr_blocks = []  // NOTE: Do not open this up to 0.0.0.0/0. Restrict access to your IP address for the demo.
associate_public_ip_address_to_ec2 = false // Set this to true if you want to provide a public IP to the EC2 instance
allow_internet_access = false // Set this to true if you want to be able to access the server from the Internet.
bucket_name_prefix = "your-name-prefix"

// Example for using ALB Auth with Google (you'll need to create an OpenID app)
lb-authentication-authorization-endpoint = "https://accounts.google.com/o/oauth2/auth"
lb-authentication-client-id = "<the-client-id-of-the-app>"
lb-authentication-client-secret = "<the-client-secret-of-the-app>"
lb-authentication-issuer = "https://accounts.google.com"
lb-authentication-jwt-email-key = "email"
lb-authentication-jwt-groups-key = "groups"
lb-authentication-token-endpoint = "https://oauth2.googleapis.com/token"
lb-authentication-user-info-endpoint = "https://www.googleapis.com/oauth2/v3/userinfo"
lb-authentication-scope = "https://www.googleapis.com/auth/admin.directory.group.readonly email openid"

// Example for using ALB Auth with Okta
lb-authentication-authorization-endpoint = "https://dev-12345.okta.com/oauth2/default/v1/authorize"
lb-authentication-client-id = "<the-client-id-of-the-app>"
lb-authentication-client-secret = "<the-client-secret-of-the-app>"
lb-authentication-issuer = "https://dev-12345.okta.com/oauth2/default"
lb-authentication-jwt-email-key = "email"
lb-authentication-jwt-groups-key = "groups"
lb-authentication-token-endpoint = "https://dev-12345.okta.com/oauth2/default/v1/token"
lb-authentication-user-info-endpoint = "https://dev-12345.okta.com/oauth2/default/v1/userinfo"
lb-authentication-scope = "email openid groups"

// Optionally customize the repo or release you'd like to use for ConsoleMe. This is used as an argument to
// `git clone`. Since the default value will cause your instances to pull from Netflix's ConsoleMe `master` branch,
// you may want to customize this to use a specific release. The master branch is prone to have breaking changes.
// Example: consoleme_repo = "https://github.com/Netflix/consoleme --branch v0.6.8"
consoleme_repo = "https://github.com/Netflix/consoleme/"

// Optionally configure ConsoleMe to retrieve account, org structure, and SCPs from AWS Organizations
sync_accounts_from_organizations = true
sync_accounts_from_organizations_account_map = [{ organizations_master_account_id = "123456789012", organizations_master_role_to_assume = "ConsoleMe" }]
