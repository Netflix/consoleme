{
  "accessCodeLifespan": 60,
  "accessCodeLifespanLogin": 1800,
  "accessCodeLifespanUserAction": 300,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "adminEventsDetailsEnabled": true,
  "adminEventsEnabled": true,
  "attributes": {
    "_browser_header.contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "_browser_header.contentSecurityPolicyReportOnly": "",
    "_browser_header.strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "_browser_header.xContentTypeOptions": "nosniff",
    "_browser_header.xFrameOptions": "SAMEORIGIN",
    "_browser_header.xRobotsTag": "none",
    "_browser_header.xXSSProtection": "1; mode=block",
    "actionTokenGeneratedByAdminLifespan": "43200",
    "actionTokenGeneratedByUserLifespan": "300",
    "bruteForceProtected": "false",
    "failureFactor": "30",
    "maxDeltaTimeSeconds": "43200",
    "maxFailureWaitSeconds": "900",
    "minimumQuickLoginWaitSeconds": "60",
    "offlineSessionMaxLifespan": "5184000",
    "offlineSessionMaxLifespanEnabled": "false",
    "permanentLockout": "false",
    "quickLoginCheckMilliSeconds": "1000",
    "waitIncrementSeconds": "60"
  },
  "authenticationFlows": [
    {
      "alias": "Handle Existing Account",
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-email-verification",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "id": "ce203051-4451-482d-b763-0044dd7f1d22",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "Verify Existing Account by Re-authentication",
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "OPTIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reauthentication of existing account",
      "id": "5cc6210a-0bd0-49c7-807b-4bda3a5041a1",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "browser",
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "autheticatorFlow": false,
          "priority": 25,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "browser based authentication",
      "id": "be973803-007f-47e5-90cd-d7ee427733bc",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "clients",
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Base authentication for clients",
      "id": "c9aacd07-33cd-4274-9999-11706d1ab47c",
      "providerId": "client-flow",
      "topLevel": true
    },
    {
      "alias": "direct grant",
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "OPTIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "OpenID Connect Resource Owner Grant",
      "id": "780af59a-4cbd-4e64-b0da-c6c0b81b2fcd",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "docker auth",
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Used by Docker clients to authenticate against the IDP",
      "id": "7562347b-a2c5-4d4d-84ff-6c9f404ae223",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "first broker login",
      "authenticationExecutions": [
        {
          "authenticator": "idp-review-profile",
          "authenticatorConfig": "review profile config",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "idp-create-user-if-unique",
          "authenticatorConfig": "create unique user config",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        },
        {
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "priority": 30,
          "requirement": "ALTERNATIVE",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "id": "c02c96b7-66b6-4d6b-8149-c8c3b4009276",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "forms",
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "OPTIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Username, password, otp and other auth forms.",
      "id": "2c43b51c-5921-40e9-bff6-6560afd8dfe2",
      "providerId": "basic-flow",
      "topLevel": false
    },
    {
      "alias": "http challenge",
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "id": "f51938f0-9244-4671-89e2-9068e556afef",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration",
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration flow",
      "id": "f050f92d-90df-43b3-8c16-79c60cf500ca",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "registration form",
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "autheticatorFlow": false,
          "priority": 50,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "autheticatorFlow": false,
          "priority": 60,
          "requirement": "DISABLED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "registration form",
      "id": "813452e3-6678-47e0-845f-310b1eef005e",
      "providerId": "form-flow",
      "topLevel": false
    },
    {
      "alias": "reset credentials",
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "autheticatorFlow": false,
          "priority": 20,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "autheticatorFlow": false,
          "priority": 30,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "autheticatorFlow": false,
          "priority": 40,
          "requirement": "OPTIONAL",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "Reset credentials for a user if they forgot their password or something",
      "id": "87060b61-be2a-4a78-8f16-342ffe47a982",
      "providerId": "basic-flow",
      "topLevel": true
    },
    {
      "alias": "saml ecp",
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "autheticatorFlow": false,
          "priority": 10,
          "requirement": "REQUIRED",
          "userSetupAllowed": false
        }
      ],
      "builtIn": true,
      "description": "SAML ECP Profile Authentication Flow",
      "id": "fa2c6b8a-687a-4d4a-8fa3-4dc068e82440",
      "providerId": "basic-flow",
      "topLevel": true
    }
  ],
  "authenticatorConfig": [
    {
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      },
      "id": "f6b82086-3774-4460-8fc1-37d17d638b09"
    },
    {
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      },
      "id": "e911cc84-47ee-4e36-b9d7-82c3ad37859a"
    }
  ],
  "browserFlow": "browser",
  "browserSecurityHeaders": {
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "contentSecurityPolicyReportOnly": "",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "xContentTypeOptions": "nosniff",
    "xFrameOptions": "SAMEORIGIN",
    "xRobotsTag": "none",
    "xXSSProtection": "1; mode=block"
  },
  "bruteForceProtected": false,
  "clientAuthenticationFlow": "clients",
  "clientScopes": [
    {
      "attributes": {
        "consent.screen.text": "${addressScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: address",
      "id": "c0658d84-4f72-40f2-a09d-41838288667c",
      "name": "address",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "user.attribute.country": "country",
            "user.attribute.formatted": "formatted",
            "user.attribute.locality": "locality",
            "user.attribute.postal_code": "postal_code",
            "user.attribute.region": "region",
            "user.attribute.street": "street",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "01b53168-ff86-4a66-bc81-8daa73a5a6fe",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${emailScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: email",
      "id": "10d7fa9a-e9c6-407f-9950-415e4bc3e3f4",
      "name": "email",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "emailVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "fa9239ad-57b5-46e4-8d6e-726516e331a3",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "email",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "email",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "5e9ead1c-db5e-4af8-be21-3d03fa7a5fac",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        }
      ]
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "include.in.token.scope": "true"
      },
      "description": "Microprofile - JWT built-in scope",
      "id": "a69e3744-6006-45a0-893a-780768582743",
      "name": "microprofile-jwt",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "upn",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "61f7704b-1c12-4d15-a18e-6887f13dd872",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "groups",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a56b8a6b-ba99-41c9-8262-884a02dd1f7a",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "OpenID Connect built-in scope: offline_access",
      "id": "00006239-1587-4c32-8eba-f6fb89d6d771",
      "name": "offline_access",
      "protocol": "openid-connect"
    },
    {
      "attributes": {
        "consent.screen.text": "${phoneScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: phone",
      "id": "152af79a-b882-4895-931c-acb8ce71567a",
      "name": "phone",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "phoneNumber",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "e7fecd83-c385-40ac-9e18-d85265163d7b",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "id.token.claim": "true",
            "jsonType.label": "boolean",
            "user.attribute": "phoneNumberVerified",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "7f42058f-f6c2-46f6-afe7-a5b281f4603f",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${profileScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "true"
      },
      "description": "OpenID Connect built-in scope: profile",
      "id": "ab035414-0a14-45d3-b474-b80fcc0af824",
      "name": "profile",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "profile",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "profile",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "54249d0f-8e1c-4fc2-b299-bc39852207cc",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "given_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "firstName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "a6dee8fd-b6ef-416a-8332-e7a590aff0af",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "gender",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "gender",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "dda153ae-56bc-484b-a226-e3e7ee28e68c",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "birthdate",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "3ca1f5df-421e-4b33-a53d-9c5e5bac80a0",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "middleName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "ca81a915-1dd2-4c05-94b8-9a9f6cbf7ee9",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "nickname",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "nickname",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4d94debc-f726-47df-833e-e90e08a64a4b",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "zoneinfo",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "734adaeb-316d-43f3-ab11-6b67a8162dde",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "id.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "05a79ca5-01a0-4e67-a444-3026901c21fb",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "family_name",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "lastName",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "08e46ce9-af69-4176-9c20-d5390bc251af",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "username",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "653cb528-68e3-46f2-b46f-da2c5a706bc2",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "updatedAt",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "ebaf0a6f-02a2-40e8-9c31-25ab482eda89",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "69f4cc45-45d0-4db7-ab2b-63ec64bbd2bd",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "picture",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "picture",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "c9c981db-88bb-48a2-bc6f-6cd15bf53c3b",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "website",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "website",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "27b57b41-b74b-4932-a1d4-cd022e78d0fb",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "description": "SAML role list",
      "id": "a8f949d9-fbf1-41ff-bbe0-598f954ebb93",
      "name": "role_list",
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "Roles",
            "attribute.nameformat": "Basic",
            "single": "false"
          },
          "consentRequired": false,
          "id": "7d933f14-067e-4df7-bfbb-a5173909c24d",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "${rolesScopeConsentText}",
        "display.on.consent.screen": "true",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add user roles to the access token",
      "id": "8950da89-4530-4734-8255-f704450ab608",
      "name": "roles",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "0ab71a9d-eb34-4ec8-94bb-995b910a1fb4",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "1f7eb2bc-8a50-49ab-9044-ec83c0e53f9b",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper"
        },
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true",
            "user.attribute": "foo"
          },
          "consentRequired": false,
          "id": "ba7c0a1d-4236-4049-9216-0d841a293247",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper"
        }
      ]
    },
    {
      "attributes": {
        "consent.screen.text": "",
        "display.on.consent.screen": "false",
        "include.in.token.scope": "false"
      },
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "id": "6d940975-1317-41d7-ab23-a510af0953bb",
      "name": "web-origins",
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {},
          "consentRequired": false,
          "id": "076d221b-70b1-4166-ad69-ffb561f351fa",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper"
        }
      ]
    }
  ],
  "clients": [
    {
      "adminUrl": "http://127.0.0.1:8081/saml",
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "true",
        "saml.authnstatement": "true",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "true",
        "saml.server.signature.keyinfo.ext": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml.signing.certificate": "MIICoTCCAYkCBgFrKJSUSzANBgkqhkiG9w0BAQsFADAUMRIwEAYDVQQDDAljb25zb2xlbWUwHhcNMTkwNjA1MTY1NzM0WhcNMjkwNjA1MTY1OTE0WjAUMRIwEAYDVQQDDAljb25zb2xlbWUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC6tQ62FnMcWPlvntLBm7ac73IKypx08I/UqS4znDNIOTy4Ux+Nku9BsDF3oiKk/zyZPdbNVkJZVdcR1VLGy9U7JQPNoYg1CeK4OcSzLTS3t4pDbCZRz9BWM1ukXULfRewOutTcQhanDl/jRB3nZkq0knLQwOQHckMKdty3kkXX3UOB9zBZY9Tm4TCVvAoFIyviJKS3zCnUt/P7/chO7QvBUAixQZKfKEjCgJFeM/VCEo0w9J/PnD/kdWmZh+LOntIwcQeVqHq3VsZfbNeYnpfzshtMG5FWsc8+ctDYChts1Nu8/7vM5yYXjLOqjNF6poyyfVcafdyqtobqd26WHHjbAgMBAAEwDQYJKoZIhvcNAQELBQADggEBABTNMwmLlus5cJodXmSZ/M1XUmP4PuFb6aabNlQqwlJrQRyQNlpaiSrJ3cFhYXdm5BxKhSRPy8vqv5fZCnm3RQMPkSl9AaT5IyZy6vKubDdjto0dXkBoO1MdvQ4vOzz50CPADb4oUzIXr96Hb0HBy7FtNE1ubHXpL4Ky5jT2ryQLnM+ckjfMknyPi5S2U0rWxP2JSXA97GpEAifSqXRxPt00voJCj0ssRTXXzN7BgVxntm45wzS8I10POrirtaxrhCBrMo0wX73V7MA4VnTESbHMTor8TAHTOmRS0WIJTtRuXETeFh/U5WV5fl6oODFthX6VQC5t6XIyMlgWCIQqur0=",
        "saml.signing.private.key": "MIIEpAIBAAKCAQEAurUOthZzHFj5b57SwZu2nO9yCsqcdPCP1KkuM5wzSDk8uFMfjZLvQbAxd6IipP88mT3WzVZCWVXXEdVSxsvVOyUDzaGINQniuDnEsy00t7eKQ2wmUc/QVjNbpF1C30XsDrrU3EIWpw5f40Qd52ZKtJJy0MDkB3JDCnbct5JF191DgfcwWWPU5uEwlbwKBSMr4iSkt8wp1Lfz+/3ITu0LwVAIsUGSnyhIwoCRXjP1QhKNMPSfz5w/5HVpmYfizp7SMHEHlah6t1bGX2zXmJ6X87IbTBuRVrHPPnLQ2AobbNTbvP+7zOcmF4yzqozReqaMsn1XGn3cqraG6ndulhx42wIDAQABAoIBAHbtN3ay7BXFcvUvlI2wcuyZ9Ol8z5YJWYSbUwua1muN0eiTQgj67B3KbmgGxcyVq/LsmfNnm5GuBPWeDUEFu0gWNsr3tnwaVOkGGw4KoIbZiV+S9wGrvsf5pMkYgq0Xq9piFY5LJoS4uklYLTglRzaoBiyEgXtgw+VZexQPPx/VAMItq5JAsYT+vF4YoHpaktCUTontaViM5rcDgBGjEoZmyJeR+ja+pCqpzC8p8rY9jflsVYpFiNJIq2eOt5EC3nxqhOsr166t7CKmRQz8+yxlOs68s3tHEvEWn1bz1x0tHR4N+ZRnXNmYLDEt9ji9a1AOKTpiK002FbzXKJFXk5kCgYEA6Qb48KP4igt9iQzfWI240wuprmrkA8ydXBRuQvvfu/e71WEDQKoEgLg57RDBGafvE3t0omI8Q6SQ+l7SJuzepUtHTV5edWWbVGqlkiAHc2HjMpjZDz62Kc8yZl/EI+yo1k9FH4wYPXo3WO0ficHG92ZusmFJx1MHb0allUWnE1UCgYEAzR0VgTXGt3iZiDeVFLIzcrdFfHo54WWzx+dmXYL20RgC5dCz9FwAJvzBCm1DW0EkfGhL4F4tn/tF6XqPeQC1+ut/cFu/hqTMiAX+8y2HXO5IjryxzhfxWsbhlKuCTcQbJ7VGoqQQCLALH0iSWsihQJ+HjKy4sA5pK5O4/dFcu28CgYEAuc/HfQsiyeCzry7GgXQwpoisOtodCzKDX8Mi0OLK2rWF33XGBDAN+x3rgq9TasPQDXbp3/n5F+8Hc71cUZGbT66hIn5XT8E/hKatc8F6b3Tkl5ntqwxUcS44gA1o90RktM7szWUGhy8HJy+dcFlF8EyLhE2zaO86BG8O5eJugSkCgYEApm4X+ezhnhN8OJwpGk7yEf4FotgmSO7V7rmjRPM0RDtAdqteqUNRWFE0bbp0sgHskgmqr5abXLltY+JvshZSkxQtJsU7ZgwobaK32SezM0Ohmjgf6gNhcm/3sENuCp26DwE3HFcVL4dwruSa5JDwztfjC9FGVoyK57IIo+MSZH8CgYBEOQIMkly9N6ueGUplwbP/qn4Zjg708j56/mM91W0XrHTni6qiBFOpJl9A/UzNgQWpkrm67Kn0jHsGZ2nZJbrVhoMWw4chra2BfoFQH/3D8TXJbKxv4uQl3SyWOlqolUCSqoOOpaWKZxM/7Hr7ulyZKWysprA7IAmA3b1QFYRnXg==",
        "saml_force_name_id_format": "false",
        "saml_name_id_format": "email",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "http://127.0.0.1:8081",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "consoleme",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": true,
      "fullScopeAllowed": true,
      "id": "2c1c92a1-8fb7-4742-a95f-6729977b1784",
      "implicitFlowEnabled": false,
      "name": "consoleme",
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "saml",
      "protocolMappers": [
        {
          "config": {
            "attribute.name": "groups",
            "full.path": "false",
            "single": "true"
          },
          "consentRequired": false,
          "id": "73e24dba-e61f-48ab-9cae-93e0a53e0f3e",
          "name": "groups",
          "protocol": "saml",
          "protocolMapper": "saml-group-membership-mapper"
        },
        {
          "config": {
            "attribute.name": "user",
            "attribute.nameformat": "Basic",
            "friendly.name": "user",
            "user.attribute": "Username"
          },
          "consentRequired": false,
          "id": "5fb13a1c-7444-4f94-ae02-6b9092e4cbb3",
          "name": "Username",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper"
        },
        {
          "config": {
            "attribute.name": "Role",
            "attribute.nameformat": "Basic",
            "single": "true"
          },
          "consentRequired": false,
          "id": "b90a6619-0cc4-416a-adc4-4cefd44791f4",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper"
        },
        {
          "config": {
            "attribute.name": "email",
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "friendly.name": "email",
            "user.attribute": "email"
          },
          "consentRequired": false,
          "id": "fdeb93b8-11ce-4573-9f68-3f06ee7e4ed0",
          "name": "X500 email",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [
        "*"
      ],
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/auth/realms/consoleme/account",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "account",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "defaultRoles": [
        "view-profile",
        "manage-account"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "1bec21f4-6fa2-43de-afe8-379ad0c3d51d",
      "implicitFlowEnabled": false,
      "name": "${client_account}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [
        "/auth/realms/consoleme/account/*"
      ],
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "broker",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "9205ff1a-d801-446b-89dd-eb7dda15173e",
      "implicitFlowEnabled": false,
      "name": "${client_broker}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {
        "display.on.consent.screen": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.assertion.signature": "false",
        "saml.authnstatement": "false",
        "saml.client.signature": "false",
        "saml.encrypt": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.onetimeuse.condition": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml_force_name_id_format": "false",
        "tls.client.certificate.bound.access.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "http://127.0.0.1:8081",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "consoleme-oidc",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": true,
      "id": "1d3db563-81c1-42f9-a1f9-19dfaa85ca36",
      "implicitFlowEnabled": false,
      "nodeReRegistrationTimeout": -1,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "groups",
            "full.path": "false",
            "id.token.claim": "true",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "4ad415cc-7ed5-4558-a5f6-7c166b3beb97",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper"
        }
      ],
      "publicClient": false,
      "redirectUris": [
        "http://localhost:8081/*",
        "http://127.0.0.1:8081/*"
      ],
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "baseUrl": "/auth/admin/consoleme/console/index.html",
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "security-admin-console",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "b5f8d105-ec25-42ac-921b-ea7ba6a1974d",
      "implicitFlowEnabled": false,
      "name": "${client_security-admin-console}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "protocolMappers": [
        {
          "config": {
            "access.token.claim": "true",
            "claim.name": "locale",
            "id.token.claim": "true",
            "jsonType.label": "String",
            "user.attribute": "locale",
            "userinfo.token.claim": "true"
          },
          "consentRequired": false,
          "id": "14a44ae8-b711-4e45-9834-cd392478ea3f",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper"
        }
      ],
      "publicClient": true,
      "redirectUris": [
        "/auth/admin/consoleme/console/*"
      ],
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": true,
      "clientAuthenticatorType": "client-secret",
      "clientId": "realm-management",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": false,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "1a0f8b90-784e-462c-ac12-2208f45269ba",
      "implicitFlowEnabled": false,
      "name": "${client_realm-management}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": false,
      "redirectUris": [],
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": true,
      "surrogateAuthRequired": false,
      "webOrigins": []
    },
    {
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "bearerOnly": false,
      "clientAuthenticatorType": "client-secret",
      "clientId": "admin-cli",
      "consentRequired": false,
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "directAccessGrantsEnabled": true,
      "enabled": true,
      "frontchannelLogout": false,
      "fullScopeAllowed": false,
      "id": "2b2ef427-ee89-415e-9885-55f07159f192",
      "implicitFlowEnabled": false,
      "name": "${client_admin-cli}",
      "nodeReRegistrationTimeout": 0,
      "notBefore": 0,
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ],
      "protocol": "openid-connect",
      "publicClient": true,
      "redirectUris": [],
      "secret": "**********",
      "serviceAccountsEnabled": false,
      "standardFlowEnabled": false,
      "surrogateAuthRequired": false,
      "webOrigins": []
    }
  ],
  "components": {
    "org.keycloak.keys.KeyProvider": [
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "0897299c-d257-4f4d-9013-e75770d634d8",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {}
      },
      {
        "config": {
          "algorithm": [
            "HS256"
          ],
          "priority": [
            "100"
          ]
        },
        "id": "6933a47e-b71f-468d-ab7c-589a1c8cea0c",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {}
      },
      {
        "config": {
          "priority": [
            "100"
          ]
        },
        "id": "a9b4aa02-e87b-46db-a41e-22b3e83def5a",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {}
      }
    ],
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "ec3fa6cf-0af8-4a7e-a9f5-670e3503500a",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        },
        "id": "9cd59724-b668-4a2b-a2ec-1ec3ef4f0fe7",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subComponents": {},
        "subType": "authenticated"
      },
      {
        "config": {},
        "id": "152dff60-c7d7-4a96-ab89-813f2fece4ff",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {},
        "id": "98b2cb02-df4a-4345-8230-cbe509bef902",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "client-uris-must-match": [
            "true"
          ],
          "host-sending-registration-request-must-match": [
            "true"
          ]
        },
        "id": "1da74a3f-e94a-44ab-809c-0dd37de37d92",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "max-clients": [
            "200"
          ]
        },
        "id": "f9d9d7f2-c2c4-40c1-bc92-7d6093b1e08d",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "oidc-full-name-mapper",
            "oidc-sha256-pairwise-sub-mapper"
          ]
        },
        "id": "c2ab7ce7-6b00-4b96-9f25-f9ab0874925d",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "anonymous"
      },
      {
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "saml-role-list-mapper"
          ]
        },
        "id": "180cf5b5-fdbc-41d9-acae-ee1e037b1c29",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subComponents": {},
        "subType": "authenticated"
      }
    ]
  },
  "defaultDefaultClientScopes": [
    "email",
    "web-origins",
    "roles",
    "role_list",
    "profile"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "phone",
    "microprofile-jwt",
    "address"
  ],
  "defaultRoles": [
    "offline_access",
    "uma_authorization"
  ],
  "directGrantFlow": "direct grant",
  "dockerAuthenticationFlow": "docker auth",
  "duplicateEmailsAllowed": false,
  "editUsernameAllowed": false,
  "enabled": true,
  "enabledEventTypes": [
    "SEND_RESET_PASSWORD",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "UPDATE_TOTP",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "RESTART_AUTHENTICATION",
    "IMPERSONATE",
    "UPDATE_PROFILE_ERROR",
    "LOGIN",
    "UPDATE_PASSWORD_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "TOKEN_EXCHANGE",
    "LOGOUT",
    "REGISTER",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "UPDATE_PASSWORD",
    "CLIENT_DELETE",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "CLIENT_DELETE_ERROR",
    "VERIFY_EMAIL",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "EXECUTE_ACTIONS",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "SEND_VERIFY_EMAIL",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "UPDATE_EMAIL",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "CLIENT_UPDATE_ERROR",
    "UPDATE_PROFILE",
    "CLIENT_REGISTER_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "RESET_PASSWORD",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "eventsEnabled": true,
  "eventsExpiration": 3600,
  "eventsListeners": [
    "jboss-logging"
  ],
  "failureFactor": 30,
  "groups": [
    {
      "attributes": {},
      "clientRoles": {},
      "id": "b1f14688-97f3-4777-b0a7-54cd75cf37df",
      "name": "consoleme_admin@example.com",
      "path": "/consoleme_admin@example.com",
      "realmRoles": [],
      "subGroups": []
    },
    {
      "attributes": {},
      "clientRoles": {},
      "id": "065f772f-07b2-4833-8184-1f521aac52b8",
      "name": "consoleme_edit_config@example.com",
      "path": "/consoleme_edit_config@example.com",
      "realmRoles": [],
      "subGroups": []
    },
    {
      "attributes": {},
      "clientRoles": {},
      "id": "7f5123b7-2162-4bb5-82a7-31569d01a618",
      "name": "consoleme_edit_policies@example.com",
      "path": "/consoleme_edit_policies@example.com",
      "realmRoles": [],
      "subGroups": []
    },
    {
      "attributes": {},
      "clientRoles": {},
      "id": "afb7c50b-0d4b-40ae-be66-85ac796de181",
      "name": "consoleme_user@example.com",
      "path": "/consoleme_user@example.com",
      "realmRoles": [],
      "subGroups": []
    }
  ],
  "id": "consoleme",
  "internationalizationEnabled": false,
  "keycloakVersion": "7.0.1",
  "loginWithEmailAllowed": true,
  "maxDeltaTimeSeconds": 43200,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "notBefore": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespan": 5184000,
  "offlineSessionMaxLifespanEnabled": false,
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyDigits": 6,
  "otpPolicyInitialCounter": 0,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyType": "totp",
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "permanentLockout": false,
  "quickLoginCheckMilliSeconds": 1000,
  "realm": "consoleme",
  "refreshTokenMaxReuse": 0,
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "registrationFlow": "registration",
  "rememberMe": false,
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Configure OTP",
      "priority": 10,
      "providerId": "CONFIGURE_TOTP"
    },
    {
      "alias": "terms_and_conditions",
      "config": {},
      "defaultAction": false,
      "enabled": false,
      "name": "Terms and Conditions",
      "priority": 20,
      "providerId": "terms_and_conditions"
    },
    {
      "alias": "UPDATE_PASSWORD",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Password",
      "priority": 30,
      "providerId": "UPDATE_PASSWORD"
    },
    {
      "alias": "UPDATE_PROFILE",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Update Profile",
      "priority": 40,
      "providerId": "UPDATE_PROFILE"
    },
    {
      "alias": "VERIFY_EMAIL",
      "config": {},
      "defaultAction": false,
      "enabled": true,
      "name": "Verify Email",
      "priority": 50,
      "providerId": "VERIFY_EMAIL"
    }
  ],
  "requiredCredentials": [
    "password"
  ],
  "resetCredentialsFlow": "reset credentials",
  "resetPasswordAllowed": false,
  "revokeRefreshToken": false,
  "roles": {
    "client": {
      "account": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "containerId": "1bec21f4-6fa2-43de-afe8-379ad0c3d51d",
          "description": "${role_manage-account}",
          "id": "bd4b1a7b-b3ac-4b22-a2a7-b3a04a4e434a",
          "name": "manage-account"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1bec21f4-6fa2-43de-afe8-379ad0c3d51d",
          "description": "${role_manage-account-links}",
          "id": "356c0fce-385e-4f54-a409-eaf024f78717",
          "name": "manage-account-links"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1bec21f4-6fa2-43de-afe8-379ad0c3d51d",
          "description": "${role_view-profile}",
          "id": "42dd4f48-40e4-4b55-aac7-52718d32bc99",
          "name": "view-profile"
        }
      ],
      "admin-cli": [],
      "broker": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "9205ff1a-d801-446b-89dd-eb7dda15173e",
          "description": "${role_read-token}",
          "id": "bdd2f16e-c425-4e85-b8fc-933bd4d5a282",
          "name": "read-token"
        }
      ],
      "consoleme": [],
      "consoleme-oidc": [],
      "realm-management": [
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_query-clients}",
          "id": "82121f92-c15f-4340-bb64-5d21ac09574f",
          "name": "query-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_query-groups}",
          "id": "05a17764-f7cf-46c0-bf05-362f9fb0edce",
          "name": "query-groups"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_view-realm}",
          "id": "b368936d-a106-432c-b1e7-c1b5bf2bb397",
          "name": "view-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_view-authorization}",
          "id": "bd82d615-7ab5-4707-8ea4-c1a872d554e5",
          "name": "view-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-clients",
                "view-realm",
                "view-authorization",
                "manage-identity-providers",
                "query-realms",
                "manage-users",
                "manage-clients",
                "view-users",
                "manage-realm",
                "create-client",
                "manage-authorization",
                "view-identity-providers",
                "view-clients",
                "manage-events",
                "view-events",
                "query-users",
                "impersonation"
              ]
            }
          },
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_realm-admin}",
          "id": "a383b883-a33a-450b-a21f-45f43682930f",
          "name": "realm-admin"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_manage-users}",
          "id": "aea62046-a8de-429d-ba91-2913696aaa8a",
          "name": "manage-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_manage-identity-providers}",
          "id": "0c6f7848-94b2-4c6c-bd93-6c5df6513f7e",
          "name": "manage-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_query-realms}",
          "id": "6adddd12-6b44-47b2-8144-cb40127f99f3",
          "name": "query-realms"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_manage-clients}",
          "id": "9c903633-8226-4f9d-b97a-2d2c5c7f4c36",
          "name": "manage-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups",
                "query-users"
              ]
            }
          },
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_view-users}",
          "id": "a3fea718-111d-4093-a500-bdec3874daca",
          "name": "view-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_manage-realm}",
          "id": "bd6c12ac-5f08-45fc-8b56-6c89aa095dfc",
          "name": "manage-realm"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_create-client}",
          "id": "44197490-2586-4292-a180-4efec24401c7",
          "name": "create-client"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_manage-authorization}",
          "id": "87a42c54-9991-4718-bf42-6cefd5cccc09",
          "name": "manage-authorization"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_view-clients}",
          "id": "d7ef882e-528d-4ceb-8bf8-154830f12139",
          "name": "view-clients"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_view-identity-providers}",
          "id": "4c33d19a-8ee0-4443-aecb-f78784c1b515",
          "name": "view-identity-providers"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_manage-events}",
          "id": "fe348e68-2de6-4474-b46e-83ebb2ef4fd6",
          "name": "manage-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_view-events}",
          "id": "c8c13802-6fbc-43e7-a355-b9a6069a2432",
          "name": "view-events"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_query-users}",
          "id": "63a2f372-4abf-429e-94a7-8952a81bf773",
          "name": "query-users"
        },
        {
          "attributes": {},
          "clientRole": true,
          "composite": false,
          "containerId": "1a0f8b90-784e-462c-ac12-2208f45269ba",
          "description": "${role_impersonation}",
          "id": "52e87147-af5d-4358-a229-b1b72ae64bc5",
          "name": "impersonation"
        }
      ],
      "security-admin-console": []
    },
    "realm": [
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "consoleme",
        "description": "${role_offline-access}",
        "id": "2776daf9-353a-4dd2-a1ea-d6cdec6a9491",
        "name": "offline_access"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "consoleme",
        "id": "25c16184-9990-4b92-b2e1-a5eb3dbbdb70",
        "name": "consoleme_admin"
      },
      {
        "attributes": {},
        "clientRole": false,
        "composite": false,
        "containerId": "consoleme",
        "description": "${role_uma_authorization}",
        "id": "9167ba33-ae8e-4801-b947-b76b3b6f2eab",
        "name": "uma_authorization"
      },
      {
        "attributes": {
          "1": [
            "1"
          ]
        },
        "clientRole": false,
        "composite": false,
        "containerId": "consoleme",
        "id": "341e8ac1-c356-4f3e-8d73-3e334029d016",
        "name": "consoleme"
      }
    ]
  },
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "smtpServer": {},
  "sslRequired": "external",
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionMaxLifespanRememberMe": 0,
  "supportedLocales": [],
  "userManagedAccessAllowed": false,
  "verifyEmail": false,
  "waitIncrementSeconds": 60
}
