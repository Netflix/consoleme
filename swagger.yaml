openapi: 3.0.0
servers:
  - description: test
    url: https://test.foo
info:
  description: ConsoleMe API definition
  version: '2.0.0'
  title: ConsoleMe v2 API
  contact:
    email: psanders@netflix.com
  license:
    name: License TBD
tags:
  - name: roles
    description: Cool role stuff
paths:
  /credentials:
    post:
      summary: generate a federation url for aws console signin
  /requests:
    get:
      summary: get a list of requests
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Request'
    post:
      summary: submit a new request
      parameters:
        - in: body
          name: request
          schema:
            $ref: '#/components/schemas/RequestDetails'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestDetails'
  /requests/{requestId}:
    get:
      summary: get details about a request
      parameters:
        - $ref: '#/components/parameters/requestId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestDetails'
    put:
      summary: update a request
      parameters:
        - $ref: '#/components/parameters/requestId'
        - in: body
          name: request
          schema:
            $ref: '#/components/schemas/RequestDetails'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestDetails'
  /resources:
    get:
      summary: get resources
  /roles:
    options:
      summary: get endpoint options
      tags:
        - roles
      responses:
        200:
          description: OK
          headers:
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/accessControlAllow'
    get:
      summary: get a list of roles
      tags:
        - roles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
  /roles/{accountNumber}:
    options:
      summary: get endpoint options
      tags:
        - roles
      parameters:
        - $ref: '#/components/parameters/accountNumber'
      responses:
        200:
          description: OK
          headers:
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/accessControlAllow'
    get:
      summary: get a list of roles in an account
      tags:
        - roles
      parameters:
        - $ref: '#/components/parameters/accountNumber'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
  /roles/{accountNumber}/{roleName}:
    options:
      summary: get endpoint options
      tags:
        - roles
      parameters:
        - $ref: '#/components/parameters/accountNumber'
        - $ref: '#/components/parameters/roleName'
      responses:
        200:
          description: OK
          headers:
            Access-Control-Allow-Headers:
              $ref: '#/components/headers/accessControlAllow'
    get:
      summary: get details about a role
      tags:
        - roles
      parameters:
        - $ref: '#/components/parameters/accountNumber'
        - $ref: '#/components/parameters/roleName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDetails'
    put:
      summary: update a role
      tags:
        - roles
      parameters:
        - $ref: '#/components/parameters/accountNumber'
        - $ref: '#/components/parameters/roleName'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDetails'
  /roles/{accountNumber}/{roleName}/requests:
    get:
      summary: get a list of requests for a role
      parameters:
        - $ref: '#/components/parameters/accountNumber'
        - $ref: '#/components/parameters/roleName'
  /roles/{accountNumber}/{roleName}/requests/{requestId}:
    get:
      summary: get details about a request for a role
      parameters:
        - $ref: '#/components/parameters/accountNumber'
        - $ref: '#/components/parameters/roleName'
        - $ref: '#/components/parameters/requestId'
  /user:
    get:
      summary: get details about current user
components:
  headers:
    accessControlAllow:
      schema:
        type: string
      description: Allowed request headers
  parameters:
    accountNumber:
      name: accountNumber
      in: path
      required: true
      example: 012345678901
      schema:
        type: string
        pattern: '^\d{12}$'
    roleName:
      name: roleName
      in: path
      required: true
      example: fake_account_admin
      schema:
        type: string
    requestId:
      name: requestId
      in: path
      required: true
      example: 16fd2706-8baf-433b-82eb-8c7fada847da
      schema:
        type: string
  schemas:
    Request:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        arn:
          type: string
          description: ARN of principal being modified
          example: arn:aws:iam::123456789012:role/super_awesome_admin
        timestamp:
          type: string
          format: date-time
        justification:
          type: string
        requester_email:
          type: string
        approvers:
          type: array
          items:
            type: string
        status:
          type: string
    RequestDetails:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        arn:
          type: string
          description: ARN of principal being modified
          example: arn:aws:iam::123456789012:role/super_awesome_admin
        timestamp:
          type: string
          format: date-time
        changes:
          type: array
          items:
            $ref: '#/components/schemas/PolicyChange'
        justification:
          type: string
        requester_email:
          type: string
        requester_info:
          $ref: '#/components/schemas/User'
          readOnly: true
        approvers:
          type: array
          items:
            type: string
          readOnly: true
        reviewer:
          type: string
        status:
          type: string
        comments:
          $ref: '#/components/schemas/Comment'
    PolicyChange:
      type: object
      properties:
        arn:
          type: string
        policy_name:
          type: string
        old_policy:
          $ref: '#/components/schemas/Policy'
        new_policy:
          $ref: '#/components/schemas/Policy'
    Policy:
      type: object
      properties:
        policy_document:
          type: string
          description: JSON policy document
        policy_sha256:
          type: string
          description: hash of policy_document
    Comment:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        timestamp:
          type: string
          format: date-time
        edited:
          type: boolean
        last_modified:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        text:
          type: string
    Role:
      type: object
      properties:
        name:
          type: string
          example: super_awesome_admin
        account_id:
          type: string
          minLength: 12
          maxLength: 12
          example: '123456789012'
        account_name:
          type: string
          example: super_awesome
        arn:
          type: string
          example: arn:aws:iam::123456789012:role/super_awesome_admin
    RoleDetails:
      type: object
      properties:
        name:
          type: string
          example: super_awesome_admin
        account_id:
          type: string
          minLength: 12
          maxLength: 12
          example: '123456789012'
        account_name:
          type: string
          example: super_awesome
        arn:
          type: string
          example: arn:aws:iam::123456789012:role/super_awesome_admin
        inline_policies:
          type: array
          items:
            type: object # TODO: make inline_policies schema
        assume_role_policies:
          type: array
          items:
            type: object # TODO: make assume_role_policies schema
        managed_policies:
          type: array
          items:
            type: object # TODO: make managed_policies schema
        tags:
          type: array
          items:
            type: object # TODO: make tags schema
        templated:
          type: boolean
        template_link:
          type: string
    User:
      type: object
      properties:
        email:
          type: string
        pandora_info:
          type: object
